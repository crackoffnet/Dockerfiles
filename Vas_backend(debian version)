FROM debian
MAINTAINER garegin.ayvazyan@ucom.am, garegin.ayvazyan@hotmail.com
RUN apt-get update && apt-get install --no-install-recommends --no-install-suggests -y gnupg1
RUN apt-get install -y --allow-unauthenticated git curl wget net-tools vim software-properties-common alien libaio1 apache2 ifupdown
RUN     wget https://www.sudo.ws/sudo/dist/packages/Debian/9/sudo_1.8.21-3_amd64.deb && dpkg -i sudo_1.8.21-3_amd64.deb
RUN     curl --silent --location https://deb.nodesource.com/setup_6.x | sudo bash -
RUN     apt-get install -y nodejs build-essential npm
RUN     echo "deb http://ftp.de.debian.org/debian stretch-backports main" >> /etc/apt/sources.list \
        && apt-get update \
        && apt-get install -y openjdk-9-jdk openjdk-9-jre \
        && apt-get clean


ENV JAVA_HOME=/usr/lib/jvm/java-9-openjdk-amd64
RUN wget -O /tmp/apache-tomcat-8.5.23.tar.gz \
   http://www-eu.apache.org/dist/tomcat/tomcat-8/v8.5.23/bin/apache-tomcat-8.5.23.tar.gz
RUN tar zxvf /tmp/apache-tomcat-8.5.23.tar.gz -C /opt/
ENV CATALINA_HOME=/opt/apache-tomcat-8.5.23/

# clean
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN git clone https://github.com/crackoffnet/vas_app.git /tmp/vas_app/
WORKDIR /tmp/vas_app/
RUN alien -i oracle-instantclient11.2-basic-11.2.0.3.0-1.x86_64.rpm
RUN alien -i oracle-instantclient11.2-devel-11.2.0.3.0-1.x86_64.rpm
RUN alien -i oracle-instantclient11.2-jdbc-11.2.0.3.0-1.x86_64.rpm
RUN alien -i oracle-instantclient11.2-sqlplus-11.2.0.3.0-1.x86_64.rpm
ENV ORACLE_HOME=/usr/lib/oracle/11.2/client64
ENV PATH=$PATH:$ORACLE_HOME/bin
ENV LD_LIBRARY_PATH=/usr/lib/oracle/11.2/client64/lib/${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
#RUN chmod +x oracle_paths.sh && ./oracle_paths.sh
#RUN chmod o+r /etc/ld.so.conf.d/oracle.conf && ldconfig
#RUN chmod o+r /etc/profile.d/oracle.sh && ldconfig
WORKDIR /tmp/vas_app/autoweb/
RUN npm install
RUN npm install --global grunt
RUN npm install --global grunt-cli bower grunt-karma karma karma-phantomjs-launcher karma-jasmine jasmine-core phantomjs-prebuilt --save-dev
RUN bower install --allow-root
RUN grunt build
RUN mkdir /var/www/html/backend_jars
RUN cp ../vta*.jar /var/www/html/backend_jars/
RUN cp -avr /tmp/vas_app/autoweb/dist/. /var/www/html/
EXPOSE 8080 8090 80 9000
RUN $CATALINA_HOME/bin/startup.sh
CMD ["systemctl","start","apache2"]
#CMD java -jar /var/www/html/backend_jars/vta-oar.jar > /var/log/vta-oar.log &
#CMD java -jar /var/www/html/backend_jars/vta-vas.jar > /var/log/vta-vas.log &
